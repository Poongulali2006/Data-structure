#include <stdio.h>
#include <stdlib.h>
typedef struct Node {
    int data;            
    struct Node* left;   
    struct Node* right;
} Node;


Node* createNode(int data) {
    Node* newNode = (Node*)malloc(sizeof(Node)); 
    newNode->data = data;  
    newNode->left = NULL; 
    newNode->right = NULL; 
    return newNode;
}
int height(Node* root) {
    if (root == NULL) {
        return 0; 
    }
    int leftHeight = height(root->left);  
    int rightHeight = height(root->right); 
    return (leftHeight > rightHeight ? leftHeight : rightHeight) + 1; 
}
void freeTree(Node* root) {
    if (root != NULL) {
        freeTree(root->left);
        freeTree(root->right);
        free(root);
    }
}

int main() {
    Node* root = NULL;

    
    root = createNode(50);
    root->left = createNode(30);
    root->right = createNode(70);
    root->left->left = createNode(20);
    root->left->right = createNode(40);
    root->right->left = createNode(60);
    root->right->right = createNode(80);

    
    int treeHeight = height(root);
    printf("Height of the binary tree: %d\n", treeHeight);

    
    freeTree(root);

    return 0;
}
