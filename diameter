#include <stdio.h>
#include <stdlib.h>


struct TreeNode {
    int val;
    struct TreeNode *left;
    struct TreeNode *right;
};
struct TreeNode* newNode(int value) {
    struct TreeNode* node = (struct TreeNode*)malloc(sizeof(struct TreeNode));
    node->val = value;
    node->left = NULL;
    node->right = NULL;
    return node;
}


int height(struct TreeNode* node, int* diameter) {
    
    if (node == NULL) {
        return 0;
    }
    
    int leftHeight = height(node->left, diameter);
    int rightHeight = height(node->right, diameter);

    if (leftHeight + rightHeight + 1 > *diameter) {
        *diameter = leftHeight + rightHeight + 1; 
    }
    
  
    return (leftHeight > rightHeight ? leftHeight : rightHeight) + 1;
}


int diameterOfBinaryTree(struct TreeNode* root) {
    int diameter = 0;
    height(root, &diameter);
    return diameter; 
}


int main() {
    struct TreeNode* root = newNode(1);
    root->left = newNode(2);
    root->right = newNode(3);
    root->left->left = newNode(4);
    root->left->right = newNode(5);
    
    printf("Diameter of the binary tree is: %d
", diameterOfBinaryTree(root));
    
  
    return 0;
}
